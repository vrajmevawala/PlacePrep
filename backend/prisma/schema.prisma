generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  Aptitude
  Technical
}

enum Level {
  easy
  medium
  hard
}

model User {
  id           Int           @id @default(autoincrement())
  role         String        @default("user")
  fullName     String
  email        String        @unique
  password     String
  created_at   DateTime      @default(now())
  
  questions    Question[]    @relation("UserQuestions")
  testSeries   TestSeries[]  @relation("UserTestSeries")
  freePractice freePractice[]@relation("UserFreePractice")
  participations Participation[]
  studentActivities StudentActivity[]
}

model Question {
  id           Int       @id @default(autoincrement())
  category     Category
  subcategory  String
  level        Level
  question     String
  options      Json
  correctAns   String
  explanation  String
  visibility   Boolean   @default(true)
  createdBy    Int
  created_at   DateTime  @default(now())

  author       User      @relation("UserQuestions", fields: [createdBy], references: [id])
  testSeries   TestSeries[] 
  freePractice freePractice[] 
  studentActivities StudentActivity[]
}

model TestSeries {
  id             Int            @id @default(autoincrement())
  createdBy      Int
  title          String
  startTime      DateTime
  endTime        DateTime

  creator        User           @relation("UserTestSeries", fields: [createdBy], references: [id])
  questions      Question[]     @relation("TestSeriesQuestions", references: [id])
  participations Participation[]
}

model freePractice {
  id             Int            @id @default(autoincrement())
  createdBy      Int
  title          String
  startTime      DateTime
  endTime        DateTime

  creator        User           @relation("UserFreePractice", fields: [createdBy], references: [id])
  questions      Question[]     @relation("FreePracticeQuestions", references: [id])
  participations Participation[]
}

model Participation {
  pid           Int       @id @default(autoincrement())
  sid           Int       // user ID
  practiceTest  Boolean
  contest       Boolean
  aptID         Int       // testSeries/freePractice ID
  startTime     DateTime
  endTime       DateTime

  user          User      @relation(fields: [sid], references: [id])
}

model StudentActivity {
  aid           Int       @id @default(autoincrement())
  sid           Int       // user ID
  qid           Int       // question ID
  time          DateTime

  user          User      @relation(fields: [sid], references: [id])
  question      Question  @relation(fields: [qid], references: [id])
}